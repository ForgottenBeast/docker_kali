- name: "Install requirements"
  include: requirements.yml
  become: True

- name: "Create service dir"
  file:
    name: "/tmp/kalistack"
    state: directory

- name: "Copy build files"
  copy:
    src: "{{ item }}"
    dest: /tmp/kalistack/{{ item }}
    mode: "764"
  with_items:
    - Dockerfile
    - runme.sh

- name: "Create docker volumes"
  include: create_volumes.yml
  with_items:
    - "{{ kali_data_volume }}"
    - "{{ kali_vpn_volume }}"

- name: "Write vpn conf files"
  copy:
    src: "{{ kali_vpn_endpoint }}_{{ VPN_SERVICE_NAME }}_kali.ovpn"
    dest: "/tmp/kali.ovpn"
    mode: "0777"

- name: "Create tmp container tmpvol to copy files to volumes"
  docker_container:
    name: tmpvol
    volumes: 
      - "{{ kali_vpn_volume }}:/vpn"
    image: "{{ alpine_image }}"
    entrypoint: "sleep 1000"

- name: "Copy vpn config file to kali_data_volume"
  command: docker cp /tmp/kali.ovpn tmpvol:/vpn/vpn.conf

- name: "Removing tmpvol"
  docker_container:
    name: tmpvol
    state: absent

- name: "Creating a tor hidden service private key if there is none..."
  include: gen_rsa.yml
  when: tor_kali_hh_private_key == None

- name: "Copy docker-compose file"
  template:
    src: docker-compose.j2
    dest: "/tmp/kalistack/docker-compose.yml"

- name: "Deploy kali stack"
  docker_service:
    state: present
    project_src: /tmp/kalistack
    build: True

- name: "Remove docker-compose folder"
  become: True
  file:
    name: /tmp/kalistack
    state: absent

- name: "Getting onion url..."
  command: docker exec -i kalistack_torhh_1 onions
  register: onions

- name: "Here is your kali install onion url!"
  debug:
    msg: "Onion url: {{ onions.stdout }}"
